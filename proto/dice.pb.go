// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/dice.proto

package dice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RollRequest struct {
	Expression           string   `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollRequest) Reset()         { *m = RollRequest{} }
func (m *RollRequest) String() string { return proto.CompactTextString(m) }
func (*RollRequest) ProtoMessage()    {}
func (*RollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50697db675c0368, []int{0}
}

func (m *RollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollRequest.Unmarshal(m, b)
}
func (m *RollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollRequest.Marshal(b, m, deterministic)
}
func (m *RollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollRequest.Merge(m, src)
}
func (m *RollRequest) XXX_Size() int {
	return xxx_messageInfo_RollRequest.Size(m)
}
func (m *RollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollRequest proto.InternalMessageInfo

func (m *RollRequest) GetExpression() string {
	if m != nil {
		return m.Expression
	}
	return ""
}

type RollResponse struct {
	Result               int64    `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	Evaluation           string   `protobuf:"bytes,3,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollResponse) Reset()         { *m = RollResponse{} }
func (m *RollResponse) String() string { return proto.CompactTextString(m) }
func (*RollResponse) ProtoMessage()    {}
func (*RollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50697db675c0368, []int{1}
}

func (m *RollResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollResponse.Unmarshal(m, b)
}
func (m *RollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollResponse.Marshal(b, m, deterministic)
}
func (m *RollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollResponse.Merge(m, src)
}
func (m *RollResponse) XXX_Size() int {
	return xxx_messageInfo_RollResponse.Size(m)
}
func (m *RollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RollResponse proto.InternalMessageInfo

func (m *RollResponse) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RollResponse) GetEvaluation() string {
	if m != nil {
		return m.Evaluation
	}
	return ""
}

func init() {
	proto.RegisterType((*RollRequest)(nil), "RollRequest")
	proto.RegisterType((*RollResponse)(nil), "RollResponse")
}

func init() { proto.RegisterFile("proto/dice.proto", fileDescriptor_f50697db675c0368) }

var fileDescriptor_f50697db675c0368 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xc9, 0x4c, 0x4e, 0xd5, 0x03, 0x33, 0x95, 0x74, 0xb9, 0xb8, 0x83, 0xf2, 0x73,
	0x72, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xe4, 0xb8, 0xb8, 0x52, 0x2b, 0x0a, 0x8a,
	0x52, 0x8b, 0x8b, 0x33, 0xf3, 0xf3, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90, 0x44, 0x94,
	0xdc, 0xb8, 0x78, 0x20, 0xca, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0x8a,
	0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0xa0, 0x3c, 0xb0, 0x39,
	0x65, 0x89, 0x39, 0xa5, 0x89, 0x25, 0x20, 0x73, 0x98, 0xa1, 0xe6, 0xc0, 0x45, 0x8c, 0x74, 0xb9,
	0x58, 0x5c, 0x32, 0x93, 0x53, 0x85, 0x54, 0xb9, 0x58, 0x40, 0xe6, 0x09, 0xf1, 0xe8, 0x21, 0xb9,
	0x42, 0x8a, 0x57, 0x0f, 0xd9, 0x12, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x63, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xe3, 0x06, 0x58, 0x1f, 0xc0, 0x00, 0x00, 0x00,
}
